!function(){"use strict";class e{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._errorList=e.errorList,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent="",this._errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return Array.from(this._inputElements).some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._form.reset(),this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}}class t{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._data=e,this._handleImageClick=s,this._cardElement=this._getTemplate()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__like-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleLikeButton(){this._likeButton.classList.toggle("card__like-button-active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}getView(){return this._element=this._cardElement,this._cardImageEl=this._element.querySelector(".card__image"),this._element.querySelector(".card__title").textContent=this._name,this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._setEventListeners(),this._element}}class s{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t),this._closeButton=this._modalElement.querySelector(".modal__close"),this._handleEscapeKey=this._handleEscapeKey.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeKey)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeKey)}_handleEscapeKey(e){"Escape"===e.key&&this.close()}_setEventListeners(){this._modalElement.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._closeButton.addEventListener("click",(()=>{this.close()}))}}class n extends s{constructor(e,t){super({modalSelector:e}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputElements=this._modalForm.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super._setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}const r=document.querySelectorAll(".modal__form"),i=document.querySelector("#profile__edit-button-js"),o=(document.forms["profile-edit-form"],document.querySelector("#profile__add-button-js")),a={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",errorList:"modal__error"},l=document.querySelector("[name='name']"),c=document.querySelector("[name='job']"),m=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a44aa497-1b5c-4737-a030-aa953cdc7c47","Content-Type":"application/json"}}),d=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderItems=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._renderItems.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Kenai Fjords",link:"https://images.unsplash.com/photo-1547974996-050bf23b6196?q=80&w=2970&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Zion National Park",link:"https://images.unsplash.com/photo-1491590324047-588cc8277f59?q=80&w=2970&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Mt Rainier National Park",link:"https://images.unsplash.com/photo-1594324587519-20940384fd9c?q=80&w=2970&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Bryce Canyon",link:"https://images.unsplash.com/photo-1526008625783-ddfc11a3a962?q=80&w=2970&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Glacier National Park",link:"https://images.unsplash.com/photo-1610833783667-f00a448a97f0?q=80&w=2970&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Delicate Arch",link:"https://images.unsplash.com/photo-1535470614242-bf41943a99fd?q=80&w=2968&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}],renderer:function(e){const t=f(e);d.addItem(t)}},".cards__list");d.renderItems(),m.getInitialCards().then((e=>{d.renderItems(e)})).catch((e=>{console.log(e)}));const _=new n("#profile-edit-modal",(function(e){p.setUserInfo({name:e.name,job:e.job}),_.close()}));_.setEventListeners();const h=new n("#add-button-modal",(function(e){const t={name:e.title,link:e.image};d.addItem(f(t)),h.close()}));h.setEventListeners();const u=new class extends s{constructor(e){super({modalSelector:e}),this._modalImage=this._modalElement.querySelector(".modal__image"),this._modalImageCaption=this._modalElement.querySelector(".modal__caption")}open(e){this._modalImage.src=e.link,this._modalImage.alt=e.name,this._modalImageCaption.textContent=e.name,super.open()}setEventListeners(){super._setEventListeners(),this._modalImage.addEventListener("submit",(e=>{e.preventDefault()}))}}("#preview-image-modal");u.setEventListeners();const p=new class{constructor(e){let{nameElementSelector:t,jobElementSelector:s}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s)}getUserInfo(){return this._userInfo={name:this._nameElement.textContent,job:this._jobElement.textContent},this._userInfo}setUserInfo(e){let{name:t,job:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}}({nameElementSelector:".profile__title",jobElementSelector:".profile__description"});function f(e){return new t(e,"#card-template",(()=>{u.open(e)})).getView()}i.addEventListener("click",(()=>{const e=p.getUserInfo();l.value=e.name.trim(),c.value=e.job.trim(),_.open()})),o.addEventListener("click",(()=>{h.open(),E["add-button-form"].resetValidation()}));const E={};(t=>{t.forEach((t=>{const s=new e(a,t);return s.enableValidation(),E[t.getAttribute("id")]=s,E}))})(r)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,